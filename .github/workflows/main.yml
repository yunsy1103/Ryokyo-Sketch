name: Build and Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Clean and Build without Tests
        run: |
          ./gradlew clean
          ./gradlew build -x test
        env:
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
          GPT_API_URL: ${{ secrets.GPT_API_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CLOUD_AWS_ACCESSKEY: ${{ secrets.CLOUD_AWS_ACCESSKEY }}
          CLOUD_AWS_SECRETKEY: ${{ secrets.CLOUD_AWS_SECRETKEY }}
          CLOUD_AWS_BUCKET: ${{ secrets.CLOUD_AWS_BUCKET }}
          CLOUD_AWS_REGION: ${{ secrets.CLOUD_AWS_REGION }}

        # 3. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo .

        # 4. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

       # 5. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-demo
